
.data

arr: .word 6, 2, 7, 1, 9, 4;
n: .word 6
new_line: .asciiz "\n"

.text
.globl main

# $t0 = 8
# $a1 = 5

main:
#   lw $t0, n; 
  addi $t0, $zero, 10;
  100011  00000  01000 0000000000000000

#   lw $t1, n; 
  addi $t1, $zero, 10;
  100011 00000  01001 0000000000000000

#   la $a1, arr;
  addi $a1, $zero, address of arr = 0;
  001000 00000 00101 0000000000000001

  outer_loop:

    # addi $t1, $t1, -1;
    subi $t1, $t1, 1; # i = n-1
    001000 01001 01001 111111111111111

    blt $t1, $zero, exit;
    011001 01001 00000 0000000000010011

    add $t2, $zero, $zero; # j = 0
    000000 00000 00000 01010 00000 100000

    inner_loop:
      bge $t2, $t1, outer_loop; # if j >= i, go to outer_loop
      011000 01010 01001 1111111111111100

      add $t6, $t2, $a1; # t6 = &arr[j]
      000000 00101 01010 01110 00000 100000

      lw $t3, ($t6), 0[16BIT]; 
      100011 01110 01011 0000000000000000

      addi $t4, $t2, 1;
      001000 01010 01100 0000000000000001

      add $t6, $t4, $a1;
      000000 00101 01100 01110 00000 100000

      lw $t5, ($t6); 
      100011 01110  01101 0000000000000000

      blt $t5, $t3, swap;
      011001  01101 01011 0000000000000010

  after_condition:
    addi $t2, $t2, 1;
    001000 01010 01010 0000000000000001

    j inner_loop;
    000010 00000000000000000000000110

  swap:
    add $t6, $t4, $a1;
    000000 00101 01100 01110 00000 100000

    sw $t3, ($t6); 
    101011 01110  01011 0000000000000000

    add $t6, $t2, $a1;
    000000 00101 01010 01110 00000 100000

    sw $t5, ($t6); 
    101011 01110  01101 0000000000000000

    j after_condition; 
    000010 00000000000000000000001101

  exit:
    li $v0, 10      # Exit the program
    syscall